{"changed":true,"filter":false,"title":"app.js","tooltip":"/node/app.js","value":"'use strict';\n\nconst\n  bodyParser = require('body-parser'),\n  config = require('config'),\n  crypto = require('crypto'),\n  express = require('express'),\n  https = require('https'),\n  mysql = require('mysql'),\n  request = require('request');\n\nvar app = express();\napp.set('port', process.env.PORT || 5000);\napp.set('view engine', 'ejs');\napp.use(bodyParser.json({ verify: verifyRequestSignature }));\napp.use(express.static('public'));\n\n\n// Credentials\nconst \n  APP_SECRET        =   config.get('appSecret'),\n  VALIDATION_TOKEN  =   config.get('validationToken'),\n  PAGE_ACCESS_TOKEN =   config.get('pageAccessToken'),\n  SERVER_URL        =   config.get('serverURL'),\n  API_URL           =   config.get('apiURL'),\n  DB_HOST           =   config.get('dbHost'),\n  DB_USER           =   config.get('dbUser'),\n  DB_PW             =   config.get('dbPassword'),\n  DB_NAME           =   config.get('dbName');\n  \nvar connection = mysql.createConnection({\n  host        :   DB_HOST,\n  user        :   DB_USER,\n  password    :   DB_PW,\n  database    :   DB_NAME\n});\n\nconst ErrorEnum = {\n  DBERROR : \"Database connection error :( Please try again later.\",\n  INTERNALERROR: \"Internal error :( Please try again later.\"\n};\n\nconnection.connect(function(err) {\n  if (err) sendTextMessage(senderID, ErrorEnum.DBERROR);\n});\n\nvar inputMode = \"\";\n\napp.get('/webhook', function(req, res) {\n  if (req.query['hub.mode'] === 'subscribe' &&\n      req.query['hub.verify_token'] === VALIDATION_TOKEN) {\n    console.log(\"Validating webhook\");\n    res.status(200).send(req.query['hub.challenge']);\n  } else {\n    console.error(\"Failed validation. Make sure the validation tokens match.\");\n    res.sendStatus(403);\n  }\n});\n\n\n/*\n * All callbacks for Messenger are POST-ed. They will be sent to the same\n * webhook. Be sure to subscribe your app to your page to receive callbacks\n * for your page.\n * https://developers.facebook.com/docs/messenger-platform/product-overview/setup#subscribe_app\n *\n */\napp.post('/webhook', function (req, res) {\n  var data = req.body;\n\n  // Make sure this is a page subscription\n  if (data.object == 'page') {\n    // Iterate over each entry\n    // There may be multiple if batched\n    data.entry.forEach(function(pageEntry) {\n      var pageID = pageEntry.id;\n      var timeOfEvent = pageEntry.time;\n\n      // Iterate over each messaging event\n      pageEntry.messaging.forEach(function(messagingEvent) {\n        if (messagingEvent.optin) {\n          receivedAuthentication(messagingEvent);\n        } else if (messagingEvent.message) {\n          receivedMessage(messagingEvent);\n        } else if (messagingEvent.delivery) {\n          receivedDeliveryConfirmation(messagingEvent);\n        } else if (messagingEvent.postback) {\n          receivedPostback(messagingEvent);\n        } else if (messagingEvent.read) {\n          receivedMessageRead(messagingEvent);\n        } else if (messagingEvent.account_linking) {\n          receivedAccountLink(messagingEvent);\n        } else {\n          console.log(\"Webhook received unknown messagingEvent: \", messagingEvent);\n        }\n      });\n    });\n\n    // Assume all went well.\n    //\n    // You must send back a 200, within 20 seconds, to let us know you've\n    // successfully received the callback. Otherwise, the request will time out.\n    res.sendStatus(200);\n  }\n});\n\n/*\n * This path is used for account linking. The account linking call-to-action\n * (sendAccountLinking) is pointed to this URL.\n *\n */\napp.get('/authorize', function(req, res) {\n  var accountLinkingToken = req.query.account_linking_token;\n  var redirectURI = req.query.redirect_uri;\n\n  // Authorization Code should be generated per user by the developer. This will\n  // be passed to the Account Linking callback.\n  var authCode = \"1234567890\";\n\n  // Redirect users to this URI on successful login\n  var redirectURISuccess = redirectURI + \"&authorization_code=\" + authCode;\n\n  res.render('authorize', {\n    accountLinkingToken: accountLinkingToken,\n    redirectURI: redirectURI,\n    redirectURISuccess: redirectURISuccess\n  });\n});\n\n/*\n * Verify that the callback came from Facebook. Using the App Secret from\n * the App Dashboard, we can verify the signature that is sent with each\n * callback in the x-hub-signature field, located in the header.\n *\n * https://developers.facebook.com/docs/graph-api/webhooks#setup\n *\n */\nfunction verifyRequestSignature(req, res, buf) {\n  var signature = req.headers[\"x-hub-signature\"];\n\n  if (!signature) {\n    // For testing, let's log an error. In production, you should throw an\n    // error.\n    console.error(\"Couldn't validate the signature.\");\n  } else {\n    var elements = signature.split('=');\n    var method = elements[0];\n    var signatureHash = elements[1];\n\n    var expectedHash = crypto.createHmac('sha1', APP_SECRET)\n                        .update(buf)\n                        .digest('hex');\n\n    if (signatureHash != expectedHash) {\n      throw new Error(\"Couldn't validate the request signature.\");\n    }\n  }\n}\n\n/*\n * Authorization Event\n *\n * The value for 'optin.ref' is defined in the entry point. For the \"Send to\n * Messenger\" plugin, it is the 'data-ref' field. Read more at\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/authentication\n *\n */\nfunction receivedAuthentication(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfAuth = event.timestamp;\n\n  // The 'ref' field is set in the 'Send to Messenger' plugin, in the 'data-ref'\n  // The developer can set this to an arbitrary value to associate the\n  // authentication callback with the 'Send to Messenger' click event. This is\n  // a way to do account linking when the user clicks the 'Send to Messenger'\n  // plugin.\n  var passThroughParam = event.optin.ref;\n\n  console.log(\"Received authentication for user %d and page %d with pass \" +\n    \"through param '%s' at %d\", senderID, recipientID, passThroughParam,\n    timeOfAuth);\n\n  // When an authentication is received, we'll send a message back to the sender\n  // to let them know it was successful.\n  sendTextMessage(senderID, \"Authentication successful\");\n}\n\n/*\n * Message Event\n *\n * This event is called when a message is sent to your page. The 'message'\n * object format can vary depending on the kind of message that was received.\n * Read more at https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-received\n *\n * For this example, we're going to echo any text that we get. If we get some\n * special keywords ('button', 'generic', 'receipt'), then we'll send back\n * examples of those bubbles to illustrate the special message bubbles we've\n * created. If we receive a message with an attachment (image, video, audio),\n * then we'll simply confirm that we've received the attachment.\n *\n */\nfunction receivedMessage(event) {\n  var senderID = event.sender.id;\n  console.log(senderID);\n  var recipientID = event.recipient.id;\n  var timeOfMessage = event.timestamp;\n  var message = event.message;\n\n  console.log(\"Received message for user %d and page %d at %d with message:\",\n    senderID, recipientID, timeOfMessage);\n  console.log(JSON.stringify(message));\n\n  var isEcho = message.is_echo;\n  var messageId = message.mid;\n  var appId = message.app_id;\n  var metadata = message.metadata;\n\n  // You may get a text or attachment but not both\n  var messageText = message.text;\n  var messageAttachments = message.attachments;\n  var quickReply = message.quick_reply;\n\n  if (isEcho) {\n    // Just logging message echoes to console\n    console.log(\"Received echo for message %s and app %d with metadata %s\",\n      messageId, appId, metadata);\n    return;\n  } else if (quickReply) {\n    var quickReplyPayload = quickReply.payload;\n    console.log(\"Quick reply for message %s with payload %s\",\n      messageId, quickReplyPayload);\n\n    sendTextMessage(senderID, \"Quick reply tapped\");\n    return;\n  }\n\n  if (messageText) {\n\n    // If we receive a text message, check to see if it matches any special\n    // keywords and send back the corresponding example. Otherwise, just echo\n    // the text we received.\n    switch (inputMode) {\n      case \"ADD_ASS\":\n        addAssignment()\n    }\n    switch (messageText) {\n      case 'Menu FH':\n      case 'Menu C3':\n      case 'Menu CKC':\n      case 'Menu CR':\n        sendGenericMessage(senderID);\n        break;\n\n      case 'quick reply':\n        sendQuickReply(senderID);\n        break;\n\n      case 'read receipt':\n        sendReadReceipt(senderID);\n        break;\n\n      case 'typing on':\n        sendTypingOn(senderID);\n        break;\n\n      case 'typing off':\n        sendTypingOff(senderID);\n        break;\n\n      case 'account linking':\n        sendAccountLinking(senderID);\n        break;\n\n      case 'Physics':\n        queryDB('SELECT * FROM users');\n      default:\n        sendTextMessage(senderID, messageText);\n    }\n  } else if (messageAttachments) {\n    sendTextMessage(senderID, \"Message with attachment received\");\n  }\n}\n\n\n/*\n * Delivery Confirmation Event\n *\n * This event is sent to confirm the delivery of a message. Read more about\n * these fields at https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-delivered\n *\n */\nfunction receivedDeliveryConfirmation(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var delivery = event.delivery;\n  var messageIDs = delivery.mids;\n  var watermark = delivery.watermark;\n  var sequenceNumber = delivery.seq;\n\n  if (messageIDs) {\n    messageIDs.forEach(function(messageID) {\n      console.log(\"Received delivery confirmation for message ID: %s\",\n        messageID);\n    });\n  }\n\n  console.log(\"All message before %d were delivered.\", watermark);\n}\n\n\n/*\n * Postback Event\n *\n * This event is called when a postback is tapped on a Structured Message.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/postback-received\n *\n */\nfunction receivedPostback(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n  var timeOfPostback = event.timestamp;\n\n  // The 'payload' param is a developer-defined field which is set in a postback\n  // button for Structured Messages.\n  var payload = event.postback.payload;\n  \n  console.log(\"Received postback for user %d and page %d with payload '%s' \" +\n    \"at %d\", senderID, recipientID, payload, timeOfPostback);\n\n  // Parse payload corespondingly\n  switch (payload) {\n    case: 'ADD_CLASS':\n      // Request add class\n      sendAddClassConfirmation(senderID);\n      break;\n    case: 'ADD_ASS':\n      inputMode\n      break;\n    case 'MANAGE':\n      sendManageMenu(senderID);\n      break;\n    case 'ENROLL_CLASS':\n      sendEnrollClass\n      break;\n    case 'INFO':\n      sendInfoMenu(senderID);\n      break;\n    case 'CLASS_INFO':\n      sendClassInfoMenu(senderID);\n      break;\n    case 'MY_PERSONAL_INFO':\n      sendMyPersonalInfoMenu(senderID);\n      break;\n    case 'GET_STARTED':\n      console.log(senderID);\n      request({\n          uri: API_URL + senderID,\n          method: 'GET',\n          qs: {\n              access_token: PAGE_ACCESS_TOKEN\n          }\n      }, function(error, response, body){\n          if(error) {\n              console.log(error);\n          } else {\n            var firstName = JSON.parse(body).first_name;\n            sendTextMessage(senderID, 'Hi ' + firstName + ', how can I help you today?');\n          }\n      });\n      break;\n    default:\n      // code\n  }\n\n}\n\n\n/*\n * Message Read Event\n *\n * This event is called when a previously-sent message has been read.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/message-read\n *\n */\nfunction receivedMessageRead(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n\n  // All messages before watermark (a timestamp) or sequence have been seen.\n  var watermark = event.read.watermark;\n  var sequenceNumber = event.read.seq;\n\n  console.log(\"Received message read event for watermark %d and sequence \" +\n    \"number %d\", watermark, sequenceNumber);\n}\n\n/*\n * Account Link Event\n *\n * This event is called when the Link Account or UnLink Account action has been\n * tapped.\n * https://developers.facebook.com/docs/messenger-platform/webhook-reference/account-linking\n *\n */\nfunction receivedAccountLink(event) {\n  var senderID = event.sender.id;\n  var recipientID = event.recipient.id;\n\n  var status = event.account_linking.status;\n  var authCode = event.account_linking.authorization_code;\n\n  console.log(\"Received account link event with for user %d with status %s \" +\n    \"and auth code %s \", senderID, status, authCode);\n}\n\n/*\n * Send an image using the Send API.\n *\n */\nfunction sendImageMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"image\",\n        payload: {\n          url: SERVER_URL + \"/assets/rift.png\"\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a Gif using the Send API.\n *\n */\nfunction sendGifMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"image\",\n        payload: {\n          url: SERVER_URL + \"/assets/instagram_logo.gif\"\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send audio using the Send API.\n *\n */\nfunction sendAudioMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"audio\",\n        payload: {\n          url: SERVER_URL + \"/assets/sample.mp3\"\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a video using the Send API.\n *\n */\nfunction sendVideoMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"video\",\n        payload: {\n          url: SERVER_URL + \"/assets/allofus480.mov\"\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a file using the Send API.\n *\n */\nfunction sendFileMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"file\",\n        payload: {\n          url: SERVER_URL + \"/assets/test.txt\"\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a text message using the Send API.\n *\n */\nfunction sendTextMessage(recipientId, messageText) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: messageText,\n      metadata: \"DEVELOPER_DEFINED_METADATA\"\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a button message using the Send API.\n *\n */\nfunction sendButtonMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"button\",\n          text: \"This is test text\",\n          buttons:[{\n            type: \"web_url\",\n            url: \"https://www.oculus.com/en-us/rift/\",\n            title: \"Open Web URL\"\n          }, {\n            type: \"postback\",\n            title: \"Trigger Postback\",\n            payload: \"DEVELOPED_DEFINED_PAYLOAD\"\n          }, {\n            type: \"phone_number\",\n            title: \"Call Phone Number\",\n            payload: \"+16505551234\"\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a Structured Message (Generic Message type) using the Send API.\n *\n */\nfunction sendGenericMessage(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: [{\n            title: \"Cal Dining\",\n            subtitle: \"I love Crossroads\",\n            item_url: \"http://caldining.berkeley.edu/menus/all-locations-d1\",\n            image_url: SERVER_URL + \"/assets/junk-food.jpg\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://www.oculus.com/en-us/rift/\",\n              title: \"Cal Dining\"\n            }, {\n              type: \"postback\",\n              title: \"Follow on Facebook\",\n              payload: \"Payload for first bubble\",\n            }],\n          }, {\n            title: \"touch\",\n            subtitle: \"Your Hands, Now in VR\",\n            item_url: \"https://www.oculus.com/en-us/touch/\",\n            image_url: SERVER_URL + \"/assets/touch.png\",\n            buttons: [{\n              type: \"web_url\",\n              url: \"https://www.oculus.com/en-us/touch/\",\n              title: \"Open Web URL\"\n            }, {\n              type: \"postback\",\n              title: \"Call Postback\",\n              payload: \"Payload for second bubble\",\n            }]\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a receipt message using the Send API.\n *\n */\nfunction sendReceiptMessage(recipientId) {\n  // Generate a random receipt ID as the API requires a unique ID\n  var receiptId = \"order\" + Math.floor(Math.random()*1000);\n\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message:{\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"receipt\",\n          recipient_name: \"Peter Chang\",\n          order_number: receiptId,\n          currency: \"USD\",\n          payment_method: \"Visa 1234\",\n          timestamp: \"1428444852\",\n          elements: [{\n            title: \"Oculus Rift\",\n            subtitle: \"Includes: headset, sensor, remote\",\n            quantity: 1,\n            price: 599.00,\n            currency: \"USD\",\n            image_url: SERVER_URL + \"/assets/riftsq.png\"\n          }, {\n            title: \"Samsung Gear VR\",\n            subtitle: \"Frost White\",\n            quantity: 1,\n            price: 99.99,\n            currency: \"USD\",\n            image_url: SERVER_URL + \"/assets/gearvrsq.png\"\n          }],\n          address: {\n            street_1: \"1 Hacker Way\",\n            street_2: \"\",\n            city: \"Menlo Park\",\n            postal_code: \"94025\",\n            state: \"CA\",\n            country: \"US\"\n          },\n          summary: {\n            subtotal: 698.99,\n            shipping_cost: 20.00,\n            total_tax: 57.67,\n            total_cost: 626.66\n          },\n          adjustments: [{\n            name: \"New Customer Discount\",\n            amount: -50\n          }, {\n            name: \"$100 Off Coupon\",\n            amount: -100\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a message with Quick Reply buttons.\n *\n */\nfunction sendQuickReply(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      text: \"What's your favorite movie genre?\",\n      quick_replies: [\n        {\n          \"content_type\":\"text\",\n          \"title\":\"Action\",\n          \"payload\":\"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_ACTION\"\n        },\n        {\n          \"content_type\":\"text\",\n          \"title\":\"Comedy\",\n          \"payload\":\"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_COMEDY\"\n        },\n        {\n          \"content_type\":\"text\",\n          \"title\":\"Drama\",\n          \"payload\":\"DEVELOPER_DEFINED_PAYLOAD_FOR_PICKING_DRAMA\"\n        }\n      ]\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a read receipt to indicate the message has been read\n *\n */\nfunction sendReadReceipt(recipientId) {\n  console.log(\"Sending a read receipt to mark message as seen\");\n\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: \"mark_seen\"\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send INFO of receipt type.\n *\n */\nfunction sendInfoMenu(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message:{\n    attachment:{\n      type:\"template\",\n      payload:{\n        template_type:\"button\",\n        text:\"What info to access?\\\n        Personal or Class\",\n        buttons:[\n          {\n            type:\"postback\",\n            title:\"My Personal Info\",\n            payload:\"MY_PERSONAL_INFO\"\n          },\n          {\n            type:\"postback\",\n            title:\"Class Info\",\n            payload:\"CLASS_INFO\"\n          }\n        ]\n      }\n    }\n  }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction sendClassInfoMenu(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload:{\n        template_type:\"button\",\n        text:\"Choose a class\",\n        buttons:[\n          {\n            type:\"postback\",\n            title:\"MATH 110\",\n            payload:\"MATH_110\"\n          },\n          {\n            type:\"postback\",\n            title:\"CompSci 188\",\n            payload:\"COMPSCI_188\"\n          }\n        ]\n      }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n// {\n//           template_type: \"generic\",\n//           elements: [{\n//             title: \"MATH 110\",\n//             subtitle: \"Linear Algebra II\",\n//             item_url: \"https://math.berkeley.edu/~frenkel/math110/\",\n//             image_url: SERVER_URL + \"/assets/like.png\",\n//           }]\n//         }\n\n// {\n//           template_type: \"generic\",\n//           elements: [{\n//             title: \"CompSci 188\",\n//             subtitle: \"Introduction to AI\",\n//             item_url: \"http://ai.berkeley.edu/home.html\",\n//             image_url: SERVER_URL + \"/assets/Controls.JPG\",\n//           }]\n//         }\n\nfunction sendMyPersonalInfoMenu(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"generic\",\n          elements: [{\n            title: \"Teddy Zhang\",\n            subtitle: \"UC Berkeley Sophomor\",\n            item_url: \"http://caldining.berkeley.edu/menus/all-locations-d1\",\n            image_url: SERVER_URL + \"/assets/Picture2.png\",\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\nfunction sendAddClassConfirmation(recipientId) {\n  \n}\n\n/*\n * Send Manage Menu\n *\n */\nfunction sendManageMenu(recipientId) {\n  console.log(\"Sending Manage Menu\");\n\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message:{\n    attachment:{\n      type:\"template\",\n      payload:{\n        template_type:\"button\",\n        text:\"Things to change\",\n        buttons:[\n          {\n            type:\"postback\",\n            title:\"Add Assignment\",\n            payload:\"ADD_ASS\"\n          },\n          {\n            type:\"postback\",\n            title:\"Enroll Class\",\n            payload:\"ENROLL_CLASS\"\n          },\n          {\n            type:\"postback\",\n            title:\"Drop Class\",\n            payload:\"DROP_CLASS\"\n          }\n        ]\n      }\n    }\n  }\n  };\n\n  callSendAPI(messageData);\n}\n\n\n/*\n * Turn typing indicator on\n *\n */\nfunction sendTypingOn(recipientId) {\n  console.log(\"Turning typing indicator on\");\n\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: \"typing_on\"\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Turn typing indicator off\n *\n */\nfunction sendTypingOff(recipientId) {\n  console.log(\"Turning typing indicator off\");\n\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    sender_action: \"typing_off\"\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Send a message with the account linking call-to-action\n *\n */\nfunction sendAccountLinking(recipientId) {\n  var messageData = {\n    recipient: {\n      id: recipientId\n    },\n    message: {\n      attachment: {\n        type: \"template\",\n        payload: {\n          template_type: \"button\",\n          text: \"Welcome. Link your account.\",\n          buttons:[{\n            type: \"account_link\",\n            url: SERVER_URL + \"/authorize\"\n          }]\n        }\n      }\n    }\n  };\n\n  callSendAPI(messageData);\n}\n\n/*\n * Call the Send API. The message data goes in the body. If successful, we'll\n * get the message id in a response\n *\n */\nfunction callSendAPI(messageData) {\n  request({\n    uri: 'https://graph.facebook.com/v2.6/me/messages',\n    qs: { access_token: PAGE_ACCESS_TOKEN },\n    method: 'POST',\n    json: messageData\n\n  }, function (error, response, body) {\n    if (!error && response.statusCode == 200) {\n      var recipientId = body.recipient_id;\n      var messageId = body.message_id;\n\n      if (messageId) {\n        console.log(\"Successfully sent message with id %s to recipient %s\",\n          messageId, recipientId);\n      } else {\n      console.log(\"Successfully called Send API for recipient %s\",\n        recipientId);\n      }\n    } else {\n      console.error(\"Failed calling Send API\", response.statusCode, response.statusMessage, body.error);\n    }\n  });\n}\n\n/*\n * Query SQL\n * \n *\n */\nfunction queryDB(queryMsg) {\n  //FIXME\n  connection.query(queryMsg, function(err, rows, fields) {\n    if (err) {\n        console.log(\"Error connecting to db\");\n        console.log(err.code);\n    } else {\n        console.log(rows[0].id);\n    }\n  });\n}\n\n// Start server\n// Webhooks must be available via SSL with a certificate signed by a valid\n// certificate authority.\napp.listen(app.get('port'), function() {\n  console.log('Node app is running on port', app.get('port'));\n});\n\n\n\nmodule.exports = app;\n","undoManager":{"mark":-95,"position":100,"stack":[[{"start":{"row":333,"column":20},"end":{"row":333,"column":21},"action":"remove","lines":["a"],"id":3435}],[{"start":{"row":333,"column":19},"end":{"row":333,"column":20},"action":"remove","lines":[" "],"id":3436}],[{"start":{"row":333,"column":19},"end":{"row":333,"column":20},"action":"insert","lines":["c"],"id":3437}],[{"start":{"row":333,"column":19},"end":{"row":333,"column":20},"action":"remove","lines":["c"],"id":3438}],[{"start":{"row":333,"column":19},"end":{"row":333,"column":20},"action":"insert","lines":[" "],"id":3439}],[{"start":{"row":333,"column":20},"end":{"row":333,"column":21},"action":"insert","lines":["c"],"id":3440}],[{"start":{"row":333,"column":21},"end":{"row":333,"column":22},"action":"insert","lines":["a"],"id":3441}],[{"start":{"row":333,"column":22},"end":{"row":333,"column":23},"action":"insert","lines":["l"],"id":3442}],[{"start":{"row":333,"column":22},"end":{"row":333,"column":23},"action":"remove","lines":["l"],"id":3443}],[{"start":{"row":333,"column":21},"end":{"row":333,"column":22},"action":"remove","lines":["a"],"id":3444}],[{"start":{"row":333,"column":21},"end":{"row":333,"column":22},"action":"insert","lines":["l"],"id":3445}],[{"start":{"row":333,"column":22},"end":{"row":333,"column":23},"action":"insert","lines":["a"],"id":3446}],[{"start":{"row":333,"column":23},"end":{"row":333,"column":24},"action":"insert","lines":["s"],"id":3447}],[{"start":{"row":333,"column":24},"end":{"row":333,"column":25},"action":"insert","lines":["s"],"id":3448}],[{"start":{"row":333,"column":25},"end":{"row":334,"column":0},"action":"insert","lines":["",""],"id":3449},{"start":{"row":334,"column":0},"end":{"row":334,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":334,"column":6},"end":{"row":334,"column":7},"action":"insert","lines":["s"],"id":3450}],[{"start":{"row":334,"column":7},"end":{"row":334,"column":8},"action":"insert","lines":["e"],"id":3451}],[{"start":{"row":334,"column":8},"end":{"row":334,"column":9},"action":"insert","lines":["n"],"id":3452}],[{"start":{"row":334,"column":9},"end":{"row":334,"column":10},"action":"insert","lines":["d"],"id":3453}],[{"start":{"row":334,"column":10},"end":{"row":334,"column":11},"action":"insert","lines":["A"],"id":3454}],[{"start":{"row":334,"column":11},"end":{"row":334,"column":12},"action":"insert","lines":["d"],"id":3455}],[{"start":{"row":334,"column":12},"end":{"row":334,"column":13},"action":"insert","lines":["d"],"id":3456}],[{"start":{"row":334,"column":13},"end":{"row":334,"column":14},"action":"insert","lines":["C"],"id":3457}],[{"start":{"row":334,"column":14},"end":{"row":334,"column":15},"action":"insert","lines":["l"],"id":3458}],[{"start":{"row":334,"column":15},"end":{"row":334,"column":16},"action":"insert","lines":["a"],"id":3459}],[{"start":{"row":334,"column":16},"end":{"row":334,"column":17},"action":"insert","lines":["s"],"id":3460}],[{"start":{"row":334,"column":17},"end":{"row":334,"column":18},"action":"insert","lines":["s"],"id":3461}],[{"start":{"row":334,"column":18},"end":{"row":334,"column":19},"action":"insert","lines":["C"],"id":3462}],[{"start":{"row":334,"column":19},"end":{"row":334,"column":20},"action":"insert","lines":["o"],"id":3463}],[{"start":{"row":334,"column":20},"end":{"row":334,"column":21},"action":"insert","lines":["n"],"id":3464}],[{"start":{"row":334,"column":21},"end":{"row":334,"column":22},"action":"insert","lines":["f"],"id":3465}],[{"start":{"row":334,"column":22},"end":{"row":334,"column":23},"action":"insert","lines":["i"],"id":3466}],[{"start":{"row":334,"column":23},"end":{"row":334,"column":24},"action":"insert","lines":["r"],"id":3467}],[{"start":{"row":334,"column":24},"end":{"row":334,"column":25},"action":"insert","lines":["m"],"id":3468}],[{"start":{"row":334,"column":25},"end":{"row":334,"column":26},"action":"insert","lines":["a"],"id":3469}],[{"start":{"row":334,"column":26},"end":{"row":334,"column":27},"action":"insert","lines":["t"],"id":3470}],[{"start":{"row":334,"column":27},"end":{"row":334,"column":28},"action":"insert","lines":["i"],"id":3471}],[{"start":{"row":334,"column":28},"end":{"row":334,"column":29},"action":"insert","lines":["o"],"id":3472}],[{"start":{"row":334,"column":29},"end":{"row":334,"column":30},"action":"insert","lines":["n"],"id":3473}],[{"start":{"row":334,"column":30},"end":{"row":334,"column":31},"action":"insert","lines":[")"],"id":3474}],[{"start":{"row":334,"column":30},"end":{"row":334,"column":31},"action":"remove","lines":[")"],"id":3475}],[{"start":{"row":334,"column":30},"end":{"row":334,"column":32},"action":"insert","lines":["()"],"id":3476}],[{"start":{"row":334,"column":31},"end":{"row":334,"column":32},"action":"insert","lines":["s"],"id":3477}],[{"start":{"row":334,"column":32},"end":{"row":334,"column":33},"action":"insert","lines":["e"],"id":3478}],[{"start":{"row":334,"column":33},"end":{"row":334,"column":34},"action":"insert","lines":["n"],"id":3479}],[{"start":{"row":334,"column":34},"end":{"row":334,"column":35},"action":"insert","lines":["d"],"id":3480}],[{"start":{"row":334,"column":35},"end":{"row":334,"column":36},"action":"insert","lines":["e"],"id":3481}],[{"start":{"row":334,"column":36},"end":{"row":334,"column":37},"action":"insert","lines":["r"],"id":3482}],[{"start":{"row":334,"column":37},"end":{"row":334,"column":38},"action":"insert","lines":["I"],"id":3483}],[{"start":{"row":334,"column":38},"end":{"row":334,"column":39},"action":"insert","lines":["D"],"id":3484}],[{"start":{"row":334,"column":40},"end":{"row":334,"column":41},"action":"insert","lines":[";"],"id":3485}],[{"start":{"row":335,"column":4},"end":{"row":335,"column":6},"action":"remove","lines":["  "],"id":3486}],[{"start":{"row":335,"column":2},"end":{"row":335,"column":4},"action":"remove","lines":["  "],"id":3487}],[{"start":{"row":335,"column":0},"end":{"row":335,"column":2},"action":"remove","lines":["  "],"id":3488}],[{"start":{"row":334,"column":41},"end":{"row":335,"column":0},"action":"remove","lines":["",""],"id":3489}],[{"start":{"row":857,"column":0},"end":{"row":858,"column":0},"action":"insert","lines":["",""],"id":3490}],[{"start":{"row":858,"column":0},"end":{"row":858,"column":24},"action":"insert","lines":["sendAddClassConfirmation"],"id":3491}],[{"start":{"row":858,"column":0},"end":{"row":858,"column":1},"action":"insert","lines":["f"],"id":3492}],[{"start":{"row":858,"column":1},"end":{"row":858,"column":2},"action":"insert","lines":["u"],"id":3493}],[{"start":{"row":858,"column":2},"end":{"row":858,"column":3},"action":"insert","lines":["n"],"id":3494}],[{"start":{"row":858,"column":2},"end":{"row":858,"column":3},"action":"remove","lines":["n"],"id":3495}],[{"start":{"row":858,"column":2},"end":{"row":858,"column":3},"action":"insert","lines":["n"],"id":3496}],[{"start":{"row":858,"column":3},"end":{"row":858,"column":4},"action":"insert","lines":["c"],"id":3497}],[{"start":{"row":858,"column":4},"end":{"row":858,"column":5},"action":"insert","lines":["t"],"id":3498}],[{"start":{"row":858,"column":5},"end":{"row":858,"column":6},"action":"insert","lines":["i"],"id":3499}],[{"start":{"row":858,"column":6},"end":{"row":858,"column":7},"action":"insert","lines":["o"],"id":3500}],[{"start":{"row":858,"column":7},"end":{"row":858,"column":8},"action":"insert","lines":["n"],"id":3501}],[{"start":{"row":858,"column":8},"end":{"row":858,"column":9},"action":"insert","lines":[" "],"id":3502}],[{"start":{"row":858,"column":33},"end":{"row":858,"column":35},"action":"insert","lines":["()"],"id":3503}],[{"start":{"row":858,"column":34},"end":{"row":858,"column":35},"action":"insert","lines":["r"],"id":3504}],[{"start":{"row":858,"column":35},"end":{"row":858,"column":36},"action":"insert","lines":["e"],"id":3505}],[{"start":{"row":858,"column":36},"end":{"row":858,"column":37},"action":"insert","lines":["c"],"id":3506}],[{"start":{"row":858,"column":37},"end":{"row":858,"column":38},"action":"insert","lines":["i"],"id":3507}],[{"start":{"row":858,"column":38},"end":{"row":858,"column":39},"action":"insert","lines":["p"],"id":3508}],[{"start":{"row":858,"column":39},"end":{"row":858,"column":40},"action":"insert","lines":["i"],"id":3509}],[{"start":{"row":858,"column":40},"end":{"row":858,"column":41},"action":"insert","lines":["e"],"id":3510}],[{"start":{"row":858,"column":41},"end":{"row":858,"column":42},"action":"insert","lines":["n"],"id":3511}],[{"start":{"row":858,"column":42},"end":{"row":858,"column":43},"action":"insert","lines":["t"],"id":3512}],[{"start":{"row":858,"column":43},"end":{"row":858,"column":44},"action":"insert","lines":["I"],"id":3513}],[{"start":{"row":858,"column":44},"end":{"row":858,"column":45},"action":"insert","lines":["d"],"id":3514}],[{"start":{"row":858,"column":46},"end":{"row":858,"column":47},"action":"insert","lines":[" "],"id":3515}],[{"start":{"row":858,"column":47},"end":{"row":858,"column":48},"action":"insert","lines":["{"],"id":3516}],[{"start":{"row":858,"column":48},"end":{"row":860,"column":1},"action":"insert","lines":["","  ","}"],"id":3517}],[{"start":{"row":334,"column":41},"end":{"row":335,"column":0},"action":"insert","lines":["",""],"id":3518},{"start":{"row":335,"column":0},"end":{"row":335,"column":6},"action":"insert","lines":["      "]}],[{"start":{"row":335,"column":6},"end":{"row":335,"column":7},"action":"insert","lines":["B"],"id":3519}],[{"start":{"row":335,"column":7},"end":{"row":335,"column":8},"action":"insert","lines":["R"],"id":3520}],[{"start":{"row":335,"column":8},"end":{"row":335,"column":9},"action":"insert","lines":["E"],"id":3521}],[{"start":{"row":335,"column":9},"end":{"row":335,"column":10},"action":"insert","lines":["A"],"id":3522}],[{"start":{"row":335,"column":10},"end":{"row":335,"column":11},"action":"insert","lines":["K"],"id":3523}],[{"start":{"row":335,"column":10},"end":{"row":335,"column":11},"action":"remove","lines":["K"],"id":3524}],[{"start":{"row":335,"column":9},"end":{"row":335,"column":10},"action":"remove","lines":["A"],"id":3525}],[{"start":{"row":335,"column":8},"end":{"row":335,"column":9},"action":"remove","lines":["E"],"id":3526}],[{"start":{"row":335,"column":7},"end":{"row":335,"column":8},"action":"remove","lines":["R"],"id":3527}],[{"start":{"row":335,"column":6},"end":{"row":335,"column":7},"action":"remove","lines":["B"],"id":3528}],[{"start":{"row":335,"column":6},"end":{"row":335,"column":7},"action":"insert","lines":["b"],"id":3529}],[{"start":{"row":335,"column":7},"end":{"row":335,"column":8},"action":"insert","lines":["r"],"id":3530}],[{"start":{"row":335,"column":8},"end":{"row":335,"column":9},"action":"insert","lines":["e"],"id":3531}],[{"start":{"row":335,"column":9},"end":{"row":335,"column":10},"action":"insert","lines":["a"],"id":3532}],[{"start":{"row":335,"column":10},"end":{"row":335,"column":11},"action":"insert","lines":["k"],"id":3533}],[{"start":{"row":335,"column":11},"end":{"row":335,"column":12},"action":"insert","lines":[";"],"id":3534}],[{"start":{"row":333,"column":8},"end":{"row":333,"column":9},"action":"insert","lines":[" "],"id":3535}],[{"start":{"row":332,"column":22},"end":{"row":333,"column":0},"action":"remove","lines":["",""],"id":3540}],[{"start":{"row":333,"column":0},"end":{"row":333,"column":2},"action":"remove","lines":["  "],"id":3539}],[{"start":{"row":333,"column":2},"end":{"row":333,"column":4},"action":"remove","lines":["  "],"id":3538}],[{"start":{"row":333,"column":4},"end":{"row":333,"column":6},"action":"remove","lines":["  "],"id":3537}],[{"start":{"row":333,"column":6},"end":{"row":333,"column":26},"action":"remove","lines":["// Request add class"],"id":3536}]]},"ace":{"folds":[{"start":{"row":48,"column":40},"end":{"row":57,"column":0},"placeholder":"..."},{"start":{"row":67,"column":42},"end":{"row":104,"column":0},"placeholder":"..."},{"start":{"row":167,"column":40},"end":{"row":186,"column":0},"placeholder":"..."},{"start":{"row":292,"column":46},"end":{"row":308,"column":0},"placeholder":"..."},{"start":{"row":460,"column":2},"end":{"row":463,"column":1},"placeholder":"..."},{"start":{"row":464,"column":40},"end":{"row":480,"column":0},"placeholder":"..."},{"start":{"row":482,"column":2},"end":{"row":485,"column":1},"placeholder":"..."},{"start":{"row":486,"column":40},"end":{"row":502,"column":0},"placeholder":"..."},{"start":{"row":504,"column":2},"end":{"row":507,"column":1},"placeholder":"..."},{"start":{"row":508,"column":39},"end":{"row":524,"column":0},"placeholder":"..."},{"start":{"row":526,"column":2},"end":{"row":529,"column":1},"placeholder":"..."},{"start":{"row":530,"column":52},"end":{"row":542,"column":0},"placeholder":"..."},{"start":{"row":544,"column":2},"end":{"row":547,"column":1},"placeholder":"..."},{"start":{"row":580,"column":2},"end":{"row":583,"column":1},"placeholder":"..."},{"start":{"row":584,"column":42},"end":{"row":629,"column":0},"placeholder":"..."},{"start":{"row":631,"column":2},"end":{"row":634,"column":1},"placeholder":"..."},{"start":{"row":635,"column":42},"end":{"row":695,"column":0},"placeholder":"..."},{"start":{"row":697,"column":2},"end":{"row":700,"column":1},"placeholder":"..."},{"start":{"row":701,"column":38},"end":{"row":729,"column":0},"placeholder":"..."},{"start":{"row":731,"column":2},"end":{"row":734,"column":1},"placeholder":"..."},{"start":{"row":735,"column":39},"end":{"row":746,"column":0},"placeholder":"..."},{"start":{"row":906,"column":2},"end":{"row":909,"column":1},"placeholder":"..."},{"start":{"row":910,"column":36},"end":{"row":921,"column":0},"placeholder":"..."},{"start":{"row":923,"column":2},"end":{"row":926,"column":1},"placeholder":"..."},{"start":{"row":927,"column":37},"end":{"row":938,"column":0},"placeholder":"..."},{"start":{"row":940,"column":2},"end":{"row":943,"column":1},"placeholder":"..."},{"start":{"row":944,"column":42},"end":{"row":965,"column":0},"placeholder":"..."},{"start":{"row":967,"column":2},"end":{"row":971,"column":1},"placeholder":"..."},{"start":{"row":972,"column":35},"end":{"row":995,"column":0},"placeholder":"..."},{"start":{"row":997,"column":2},"end":{"row":1001,"column":1},"placeholder":"..."}],"scrolltop":8839.5,"scrollleft":0,"selection":{"start":{"row":773,"column":21},"end":{"row":773,"column":31},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":863,"state":"comment","mode":"ace/mode/javascript"}},"timestamp":1478988860070}